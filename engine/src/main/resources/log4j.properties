# log with System.currentTimeMillis() under raw console(47/per ms)
# is a little bit faster than log under formated console(37/per ms). 
# format System.currentTimeMillis() under bash:
# date -d @$(echo "1342840676923" | sed 's/\([0-9]*\)\([0-9]\{3\}\)$/\1.\2/') +"%Y-%m-%d %H:%M:%S.%N" | sed 's/000000$//' 

#log4j.rootLogger = INFO, CONSOLE
log4j.logger.hk.ust = INFO, CONSOLE

log4j.appender.CONSOLE = org.apache.log4j.ConsoleAppender
log4j.appender.CONSOLE.encoding = UTF-8
log4j.appender.CONSOLE.layout= org.apache.log4j.PatternLayout
log4j.appender.CONSOLE.layout.ConversionPattern = %-12d{yyyy-MM-dd HH:mm:ss.S} [%t] %C %M%n%-5p %m%n
log4j.appender.CONSOLE.Target= System.out

# tracing delay time of retrieving, simulation and submission, respectively.
# example:
# 1342840676923,1342840677235,1342840677567	# retrieving, simulation, submission
# ...
log4j.logger.slave.perf1 = TRACE, SLAVE_PERF1
log4j.appender.SLAVE_PERF1 = org.apache.log4j.FileAppender
log4j.appender.SLAVE_PERF1.encoding = UTF-8
log4j.appender.SLAVE_PERF1.layout = org.apache.log4j.PatternLayout
log4j.appender.SLAVE_PERF1.layout.ConversionPattern = %m
log4j.appender.SLAVE_PERF1.BufferIO=true
log4j.appender.SLAVE_PERF1.BufferSize=16192
log4j.appender.SLAVE_PERF1.File = ../log/slave_perf1.csv

# tracing sample number, cumulatively
# example:
# 1342840676923,0
# 1342840677235,100
# 1342840677567,200
# 1342840677892,300
# ...
log4j.logger.slave.perf2 = TRACE, SLAVE_PERF2
log4j.appender.SLAVE_PERF2 = org.apache.log4j.FileAppender
log4j.appender.SLAVE_PERF2.encoding = UTF-8
log4j.appender.SLAVE_PERF2.layout = org.apache.log4j.PatternLayout
log4j.appender.SLAVE_PERF2.layout.ConversionPattern = %m
log4j.appender.SLAVE_PERF2.BufferIO=true
log4j.appender.SLAVE_PERF2.BufferSize=16192
log4j.appender.SLAVE_PERF2.File = ../log/slave_perf2.csv